name: Detect Emoji Releases

on:
  workflow_dispatch:
    inputs:
      dry-run:
        type: boolean
        description: run the workflow without creating a pull request
        required: false
        default: false
      api-base-url:
        type: choice
        description: the base URL of the mojis API
        required: false
        default: "https://api.mojis.dev"
        options:
          - "https://api.mojis.dev"
          - "https://api.preview.mojis.dev"

  schedule:
    - cron: "0 0 * * *"

jobs:
  detect:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: write
      pull-requests: write
    if: github.repository == 'mojisdev/mojis'
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          persist-credentials: false
          repository: mojisdev/scripts

      - name: run detect new releases script
        id: detect-new-releases
        uses: mojisdev/scripts/detect-new-releases@main
        with:
          mojis_api_base_url: ${{ github.event.inputs.api-base-url }}

      - name: try to generate data
        if: steps.detect-new-releases.outputs.has_new_releases == 'true'
        id: generate-data
        env:
          NEW_RELEASES: ${{ steps.detect-new-releases.outputs.unsupported_versions }}
        run: |
          # initialize an array to store successful versions
          SUCCESSFUL_VERSIONS=()

          # for each of the new releases, try to run mojis cli.
          for release in $NEW_RELEASES; do
            echo "🔍 trying to run mojis cli for release $release"
            echo "----------------------------------------"
            echo "✨ generating files for release $release"
            if npx @mojis/cli generate $release --output-dir ./emoji-data/$release; then
              echo "----------------------------------------"
              echo "🔎 validating files for release $release"
              if npx @mojis/cli validate $release --input-dir ./emoji-data/$release; then
                echo "✅ Successfully validated version $release"
                SUCCESSFUL_VERSIONS+=("$release")
              else
                echo "❌ Validation failed for version $release"
              fi
            else
              echo "❌ Generation failed for version $release"
            fi
            echo "----------------------------------------"
          done

          # save the successful versions as a comma-separated string
          echo "successful_versions=${SUCCESSFUL_VERSIONS[*]}" >> $GITHUB_OUTPUT
          echo "✨ Successfully validated versions: ${SUCCESSFUL_VERSIONS[*]}"

      - name: create pull request
        if: ${{ github.event.inputs.dry-run == 'false' }} && steps.detect-new-releases.outputs.has_new_releases == 'true' && steps.generate-data.outputs.successful_versions != ''
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7.0.8
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: detect new emoji releases"
          title: "chore: detect new emoji releases"
          body: |
            This pull request was created automatically by the `detect-new-releases` script.

            ### Successfully Validated Versions
            ${{ steps.generate-data.outputs.successful_versions }}

            These versions have been successfully generated and validated with the mojis CLI.
          branch: detect-new-releases
          base: main
          draft: true
          labels: new-release
